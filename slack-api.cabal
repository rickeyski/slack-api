Name:                slack-api
Version:             0.12
Synopsis:            Bindings to the Slack RTM API.
Description:         This library provides bindings to the <https://api.slack.com/rtm Slack Real Time Messaging API>.
                     Users should find it easy to program their own Slack bots using the functionality found in `Web.Slack`.

                     The bindings are very nearly complete. Library authors
                     looking to build bindings to the <https://api.slack.com/web Slack Web API> may
                     find the `FromJSON` instances located in `Web.Slack.Types`
                     useful.

                     Please note that the interface provided by this package is not yet stable. There are a number of unresolved
                     internal inconsistencies which have yet to be resolved by Slack HQ.
License:             MIT
Bug-reports:         https://github.com/mpickering/slack-api/issues

License-File:        LICENSE
Author:              Matthew Pickering
Maintainer:          rickeyvisinski+hs@gmail.com
Stability:           Experimental
Category:            Web
Build-type:          Simple
-- Exclude 8.2.1 due to GHC panic
Tested-With:         GHC == 8.0.2, GHC == 8.2.2, GHC == 8.4.4, GHC == 8.6.5, GHC == 8.8.3
Cabal-version:       >=1.10
source-repository head
    type: git
    location: https://github.com/mpickering/slack-api.git

flag build-examples
  description: Build example executables.
  default: False
  manual: True

library
  default-language:    Haskell2010
  hs-source-dirs: src
  ghc-options: -Wall -fno-warn-unused-do-bind
  exposed-modules:
      Web.Slack
    , Web.Slack.Types
    , Web.Slack.Types.Base
    , Web.Slack.Types.Bot
    , Web.Slack.Types.Channel
    , Web.Slack.Types.ChannelOpt
    , Web.Slack.Types.Comment
    , Web.Slack.Types.Error
    , Web.Slack.Types.Event
    , Web.Slack.Types.Event.Subtype
    , Web.Slack.Types.File
    , Web.Slack.Types.IM
    , Web.Slack.Types.Id
    , Web.Slack.Types.Item
    , Web.Slack.Types.Message
    , Web.Slack.Types.Preferences
    , Web.Slack.Types.Presence
    , Web.Slack.Types.Self
    , Web.Slack.Types.Session
    , Web.Slack.Types.Subteam
    , Web.Slack.Types.Team
    , Web.Slack.Types.TeamPreferences
    , Web.Slack.Types.Time
    , Web.Slack.Types.Topic
    , Web.Slack.Types.User
    , Web.Slack.WebAPI
  other-modules: Web.Slack.Utils
  build-depends:
      -- corePackages (see [cabal2nix/src/Cabal2Nix/CorePackages.hs])
      base >= 4.4 && < 5
    , bytestring >= 0.9.1
    , containers >= 0.4
      -- Normal Packages
    , aeson >= 2.0
    , errors >= 1.4 && < 3.0
    , hashable >= 1.2
    , io-streams >= 1.2
    , lens >= 4.8
    , lens-aeson >= 1.0
    , monad-loops >= 0.4
    , mtl >= 2.1
    , network >= 2.6
    , network-uri >= 2.6
    , scientific >= 0.3.2.0 && < 0.4
    , text >= 1.2
    , time >= 1.4
    , time-locale-compat >= 0.1 && < 0.2
    , tls >= 1.3
    , transformers >= 0.3
    , websockets > 0.9
    , wreq >= 0.4
    , wuss >= 1.0

test-suite tests
    default-language:    Haskell2010
    type: exitcode-stdio-1.0
    main-is: tests-main.hs
    ghc-options: -threaded  -Wall
    hs-source-dirs: tests .
    build-depends: slack-api, base
    other-modules: Tests.ConnectionTest

executable example_echobot
    default-language:    Haskell2010
    hs-source-dirs:      example
    main-is:             EchoBot.hs
    if flag(build-examples)
      ghc-options:   -Wall
      build-depends: base, slack-api
    else
      buildable: False

executable example_counterbot
    default-language:    Haskell2010
    hs-source-dirs:      example
    main-is:             CounterBot.hs
    if flag(build-examples)
      ghc-options:   -Wall
      build-depends: base, slack-api, text, mtl, lens
    else
      buildable: False

executable example_timerbot
    default-language:    Haskell2010
    hs-source-dirs:      example
    main-is:             TimerBot.hs
    if flag(build-examples)
      ghc-options:   -Wall -threaded
      build-depends: base, slack-api, text, transformers
    else
      buildable: False

executable example_richmessagebot
    default-language:    Haskell2010
    hs-source-dirs:      example
    main-is:             RichMessageBot.hs
    if flag(build-examples)
      ghc-options:   -Wall -threaded
      build-depends: base, slack-api, text, transformers
    else
      buildable: False

executable example_pipebot
    default-language:    Haskell2010
    hs-source-dirs:      example
    main-is:             PipeBot.hs
    if flag(build-examples)
      ghc-options:   -Wall -threaded
      build-depends: base, slack-api, text, transformers, pipes
    else
      buildable: False

executable example_managedbot
    default-language:    Haskell2010
    hs-source-dirs:      example
    main-is:             ManagedBot.hs
    if flag(build-examples)
      ghc-options:   -Wall -threaded
      build-depends: base, slack-api, text, transformers, pipes, managed
    else
      buildable: False

executable example_reactionbot
    default-language:    Haskell2010
    hs-source-dirs:      example
    main-is:             ReactionBot.hs
    if flag(build-examples)
      ghc-options:   -Wall -threaded
      build-depends: base, slack-api, text, transformers
    else
      buildable: False
